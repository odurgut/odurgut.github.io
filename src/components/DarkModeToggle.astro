---
---

<mode-toggle class="flex">
    <button
        class="justify-self-end bg-zinc-300 dark:bg-zinc-600 ml-4 inline-flex h-5 w-10 items-center rounded-full"
        id="mode-toggle"
        role="switch"
        type="button"
        tabindex="0"
        aria-checked="false"
        data-headlessui-state=""
    >
        <span class="sr-only">Toggle dark mode</span><span
            id="mode-circle"
            class="light inline-block h-3 w-3 rounded-full bg-gradient-to-tr invisible"
        >
            <span
                class="absolute top-0 right-0 w-[10px] h-[10px] rounded-full bg-white scale-[0]"
            >
            </span>
        </span>
    </button>
</mode-toggle>

<script>
    function updateHTMLTheme(mode: "light" | "dark") {
        const themeColorMetaTag = document.head.querySelector(
            'meta[name="theme-color"]'
        );

        if (mode === "dark") {
            document.documentElement.classList.remove("light");
            document.documentElement.classList.add("dark");
            if (themeColorMetaTag) {
                // @ts-ignore
                themeColorMetaTag.content = "#262626";
            }
        } else {
            document.documentElement.classList.remove("dark");
            document.documentElement.classList.add("light");
            if (themeColorMetaTag) {
                // @ts-ignore
                themeColorMetaTag.content = "#ffffff";
            }
        }
    }
    function updateStorageTheme(mode: "light" | "dark") {
        if (mode === "dark") {
            sessionStorage.setItem("theme", "dark");
        } else {
            sessionStorage.setItem("theme", "light");
        }
    }
    class ModeToggle extends HTMLElement {
        constructor() {
            super();
            let currentMode: "light" | "dark" =
                document.documentElement.classList.contains("dark")
                    ? "dark"
                    : "light";

            const toggle = this.querySelector("button");
            const iconElem = toggle?.querySelector("#mode-circle");

            if (iconElem) {
                // set the toggle mode based on the html classname set in ThemeScript.astro
                if (currentMode === "dark") {
                    iconElem.classList.remove("light");
                    iconElem.classList.add("dark");
                }

                // we load the toggle invisible to prevent flash
                // remove visibility class after setting initial dark/light class
                iconElem.classList.remove("invisible");

                // Each time the button is clicked, update the count.
                toggle?.addEventListener("click", () => {
                    if (currentMode === "dark") {
                        const modeToSwitch = "light";
                        iconElem.classList.remove("dark");
                        iconElem.classList.add("light");
                        updateHTMLTheme(modeToSwitch);
                        updateStorageTheme(modeToSwitch);
                        currentMode = modeToSwitch;
                    } else {
                        const modeToSwitch = "dark";
                        iconElem.classList.remove("light");
                        iconElem.classList.add("dark");
                        updateHTMLTheme(modeToSwitch);
                        updateStorageTheme(modeToSwitch);
                        currentMode = modeToSwitch;
                    }

                    // prevent slide animation on page load for dark mode
                    if (!iconElem.classList.contains("duration-300")) {
                        iconElem.classList.add("duration-300");
                    }
                });
            }
        }
    }

    customElements.define("mode-toggle", ModeToggle);
</script>

<style>
    .light {
        transform: translateX(0.25rem);
        background-color: white;
    }
    .dark {
        transform: translateX(1.5rem);
        background-color: #1c1d1d;
    }
</style>
